server:
  port: 8082
  tomcat:
    uri-encoding: UTF-8
  servlet:
    session:
      cookie:
        path: /
        name: JSESSIONID
        http-only: true
      timeout: 3600
    context-path: /v1

cloud:
  aws:
    region:
      static: ap-northeast-2
    credentials:
      access-key: ${S3_ACCESS_KEY}
      secret-key: ${S3_SECRET_KEY}
    stack:
      auto: false

spring:
  profiles:
    group:
      local:
        - db-local
        - aws-dev
      dev:
        - db-local
        - aws-dev
      prod:
        - db-prod
    active:
      - local
  servlet:
    multipart:
      enabled: true
      max-file-size: 20MB
      max-request-size: 20MB
  session:
    store-type: redis
    redis:
      namespace: "befinal:session"
    timeout: 60m

  thymeleaf:
    cache: false
    prefix: classpath:/templates/
    suffix: .html
    check-template-location: true
  security:
    oauth2:
      client:
        registration:
          kakao:
            client-id: ${KAKAO_REST_API}
            client-name: kakao
            client-secret: ${KAKAO_CLIENT_SECRET}
            authorization-grant-type: authorization_code
            client-authentication-method: POST
            scope:
            - profile_nickname
            - profile_image
            - account_email
            - gender
            - birthday
            redirect-uri: http://localhost:3000/register/callback
        provider:
          kakao:
            authorization-uri: https://kauth.kakao.com/oauth/authorize
            token-uri: https://kauth.kakao.com/oauth/token
            user-info-uri: https://kapi.kakao.com/v2/user/me
            user-name-attribute: id
jwt:
  token:
    secret-key: c2lsdmVybmluZS10ZWNoLXNwcmluZy1ib290LWp3dC10dXRvcmlhbC1zZWNyZXQtc2lsdmVybmluZS10ZWNoLXNwcmluZy1ib290LWp3dC10dXRvcmlhbC1zZWNyZXQK
  access-token:
    expire-length: 1800000

springdoc:
  api-docs:
    path: /api-docs
  swagger-ui:
    path: /docs
    tags-sorter: alpha
    operations-sorter: alpha
    with-credentials: true

logging:
  level:
    org.springframework.boot.autoconfigure: ERROR
    org.springframework.data.convert: ERROR
    org.hibernate: DEBUG
    org.springframework.beans.factory.support: INFO
    com.zaxxer.hikari: INFO
    io.netty: INFO
    org.springframework.context.annotation: INFO
    org.hibernate.sql: DEBUG
    org.hibernate.type: TRACE
    org.hibernate.hql.internal.ast: WARN
    org.springframework.data.redis.core.RedisConnectionUtils: WARN
    io.lettuce.core.protocol: WARN
    com.amazonaws.util.EC2MetadataUtils: ERROR
    com.amazonaws.internal.EC2ResourceFetcher: ERROR
    org.apache.http.wire: WARN
  config: classpath:logback-spring.xml

# local 환경
---
spring:
  config:
    activate:
      on-profile: "local"
  datasource:
    driver-class-name: com.mysql.cj.jdbc.Driver
    url: ${HOME_JDBC_URL}
    username: ${HOME_MARIADB_USERNAME}
    password: ${HOME_MARIADB_PASSWORD}
  jpa:
    hibernate:
      ddl-auto: update
    database: mysql
    properties:
      hibernate:
        show_sql: true
        format_sql: true
  data:
    redis:
      host: ${HOME_REDIS_HOST}
      port: 6379
      password: ${HOME_REDIS_PASSWORD}

# dev 환경
---
spring:
  config:
    activate:
      on-profile: "dev"
  session:
    store-type: redis
    redis:
      namespace: befinal:session
  datasource:
    driver-class-name: com.mysql.cj.jdbc.Driver
    hikari:
      jdbc-url: ${HOME_JDBC_URL}
      username: ${HOME_MARIADB_USERNAME}
      password: ${HOME_MARIADB_PASSWORD}
  jpa:
    hibernate:
      ddl-auto: update
  output:
    ansi:
      enabled: always
    database: mysql
    properties:
      hibernate:
        show_sql: true
        format_sql: true
  data:
    redis:
      port: 6379
      host: ${HOME_REDIS_HOST}

---

# prod 환경
spring:
  config:
    activate:
      on-profile: "prod"
  session:
    store-type: redis
    redis:
      namespace: befinal:session
  datasource:
    driver-class-name: com.mysql.cj.jdbc.Driver
    url: ${HOME_JDBC_URL}
    username: ${HOME_MARIADB_USERNAME}
    password: ${HOME_MARIADB_PASSWORD}
  jpa:
    hibernate:
      ddl-auto: update
    database: mysql
  data:
    redis:
      host: ${HOME_REDIS_HOST}
      port: 6379
